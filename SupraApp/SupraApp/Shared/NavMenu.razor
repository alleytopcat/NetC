@using System.Threading
@inject HttpClient httpClient

<MudNavMenu Class="mudblazor-navmenu">
    <div class="docs-nav-fader"></div>

    @if (mainMenu != null)
    {
        if (mainMenu.GroupMenus.Count > 0)
        {
            foreach (GroupMenu groupMenu in mainMenu.GroupMenus)
            {
                <MudNavGroup Title="@groupMenu.Nombre" Icon="@GetIcon(groupMenu.WebIcon)" ExpandIcon="@Icons.Material.Filled.ExpandMore" Style="margin-top: 10px; margin-bottom: 10px">
                    @if (groupMenu.MenuItems.Count > 0)
                    {
                        foreach(MenuItem menuItem in groupMenu.MenuItems)
                        {
                            <MudNavLink Icon="@GetIcon(menuItem.WebIcon)" Href="@menuItem.Codigo">@menuItem.Nombre</MudNavLink>
                        }
                    }
                </MudNavGroup>
            }
        }
    }
</MudNavMenu>

@code
{
    private string _searchTerm = "";
    private IEnumerable<NavMenu> _elements = new List<NavMenu>();

    private bool collapseNavMenu = false;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    public Menu mainMenu;
    //public MainMenu oMenu = new MainMenu(Guid.NewGuid(), "abc");

    protected override async Task OnInitializedAsync()
    {
        mainMenu = await httpClient.GetFromJsonAsync<Menu>("sample-data/menuTest.json");
        Console.WriteLine(Icons.Material.Filled.Star);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void CargarMenu()
    {
        Console.WriteLine(mainMenu.GroupMenus[0].Activo);
    }

    public string GetIcon(string IconName)
    {
        string iconReturn = "";
        var iconInfo = Icons.Material.Outlined.GetType().GetProperty(IconName);
        if (iconInfo != null)
        {
            iconReturn = iconInfo.GetValue(Icons.Outlined) as string;
        }
        else
        {
            iconReturn = Icons.Material.Outlined.Info;
        }
        return iconReturn;
    }
    //private IEnumerable<NavMenu> GetElements() => NavMenu.Where(e => e.Name.Contains(_searchTerm));
}
